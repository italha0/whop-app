# Camber Configuration for Chat Video Renderer
# Production-ready settings optimized for CPU rendering

name: chat-video-renderer
description: CPU-optimized iMessage-style chat video renderer with Appwrite integration
version: 1.0.0

# Python runtime configuration
runtime:
  python_version: "3.11"

# System dependencies (Ubuntu/Debian packages)
system_packages:
  - ffmpeg
  - fonts-dejavu-core
  - fonts-dejavu-extra
  - libffi-dev
  - libsm6
  - libxext6

# Python dependencies from requirements.txt
requirements: requirements.txt

# Entry point for Camber functions
# When using as a function, Camber will call this
handler: renderer.main

# Resource allocation
resources:
  cpu: 1              # 1 vCPU (optimize for free tier)
  memory: 4096        # 4GB RAM (sufficient for 1080p rendering)
  disk: 2048          # 2GB temporary storage

# Timeout settings
timeout: 600          # 10 minutes max per job (allows for longer videos)

# Environment variables
# Note: Use camber secrets for sensitive values
environment:
  # Font paths (DejaVu fonts)
  CHAT_FONT: /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf
  CHAT_FONT_BOLD: /usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf
  
  # Rendering defaults
  DEFAULT_WIDTH: "1080"
  DEFAULT_HEIGHT: "1920"
  DEFAULT_FPS: "30"
  
  # MoviePy optimization
  MOVIEPY_TEMP_DIR: /tmp
  IMAGEIO_FFMPEG_EXE: /usr/bin/ffmpeg
  
  # Appwrite configuration (set via camber secrets)
  # APPWRITE_ENDPOINT: set via secrets
  # APPWRITE_PROJECT_ID: set via secrets
  # APPWRITE_API_KEY: set via secrets
  # APPWRITE_BUCKET_ID: set via secrets

# Build configuration
build:
  # Skip unnecessary files during packaging
  exclude:
    - "*.pyc"
    - "__pycache__"
    - ".git"
    - ".vscode"
    - "*.md"
    - "tests/"
    - "examples/*.mp4"
    - "venv/"
    - ".env"
    - "*.log"

# Scaling configuration (for production)
scaling:
  min_instances: 0          # Scale to zero when idle (save costs)
  max_instances: 5          # Max concurrent renders
  concurrent_jobs: 2        # Jobs per instance

# Health check (optional)
health_check:
  path: /health
  interval: 60              # Check every 60 seconds
  timeout: 10               # 10 second timeout
  
# Logging configuration
logging:
  level: INFO
  format: json
  
# Cold start optimization
cold_start:
  preload_modules:
    - numpy
    - PIL
    - moviepy.editor
    - pydub
